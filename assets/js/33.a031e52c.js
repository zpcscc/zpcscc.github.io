(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{529:function(t,n,e){"use strict";e.r(n);var o=e(5),i=Object(o.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"css-基础介绍"}},[t._v("CSS 基础介绍")]),t._v(" "),e("p",[t._v("CSS（层叠样式表）\n用来表现html，不仅可以静态的修饰网页，还可以适配各种脚本语言动态的对网页各元素进行格式化\n在css中用户看到的大部分效果都是各种样式重叠之后形成的\n核心是层叠，多重属性叠加共同作用\n实现了内容与样式相分离\n提高了代码的可重用性")]),t._v(" "),e("p",[t._v("css3介绍\n相对于css2来说，css3更新了很多的内容，其中包括选择器、颜色、阴影、背景、文本、边框、新的布局方案、2d、3d、动画等等。\n为了更好的兼容，在我们使用某些css3的属性的时候，是需要加上浏览器内核前缀的，例如-webkit-border-radius:10px;。\n如果在开发过程中，需要大量的写浏览器前缀，可以通过编辑器的插件或者通过在线的平台进行前缀补全。")]),t._v(" "),e("p",[t._v("样式表的特性\n继承性\n直接使用其父元素已经声明好的样式\n大部分的属性都是可以被继承的\n层叠性\n可以为一个元素设置很多选择器\n只要样式不发生冲突，就可以看作一个\n优先级\n当样式发生冲突时，他们会按照不同使用方式的优先级来应用\n浏览器的缺省设置（忽略不计）\n外部样式或者内部样式 中等——遵守就近原则，从上向下执行，后面的会覆盖前面的\n内联样式优先级最高\n!important\n调整优先级的\n不管什么时候全部以!important为准，尽量少用")]),t._v(" "),e("p",[t._v("CSS统筹\n文档统筹\n整站里相同的css样式提取到一个样式表里,各个页面调用相同的样式文件即可\n网站较大的情况下一班会把网站的头部,尾部单独分离出来,包括样式文\n网站自身优化\n页面头部优化:\t\n页面头部指的是代码部分,具体的就是(Description)描述和(Keywords)关键字两部分\n描述\n应该用近乎描述的语言写下一段介绍网页的文字,在其中,你应该适当的对你的网站的特色内容加以重复以求突出")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t\t\t<meta name="description" cntent="">告诉搜索引擎你的站点的主要内容\n\t\t关键字\n\t\t\t应该列出你认为合适的,能突出网站内容的关键字就可以了,关键字不要设置太多,可设置8-10个,搜索引擎智慧浏览靠前的几个关键字\n\t\t\t<meta name="keywords" content="">向搜索引擎说明你网页的关键字\n\t超链接优化\n\t\t搜索引擎有个会自动爬行于互联网上的机器人程序,这个机器人顺着网站之间的链接游览世界\n\t\t采用纯文本链接;\n\t\t尽量不要用flash动画设置链接和图片链接,因为搜索引擎识别不了flash上为文字\n\t\t按规范书写超链接,title:起到提示访客的作用,也可以让搜索引擎知道它要去哪\n\t图片优化\n\t\t图片优化是为每个图片添加alt属性\n\t\talt属性的作用是当图片无法显示时,以文字的形作为替代显示出来,而对于eso来说,他可以令搜索引擎有机会索引到你网站上的图片\n\t\t对于一些没有什么意义的图片,最好也写alt,可以写作 alt=""\n\t避免大体积的页面\n\t\t有经验表明,搜索引擎不喜欢索引过大的页面,即一个页面代码部分的体积不要太大,控制在100kb内为佳\n\t合理的代码结构\n\t\t搜索引擎细化格式清晰,结构分明的页面,理论上XML是最合乎 搜索引,当然这太极端\n\t\t如果采用XHTML+CSS技术将页面数据同表现分离,即避免大量嵌套表格和其他冗余的代码,还是能够完美实现这一要求的\nCSS规范\n\t命名方法\n\t\t语义化命名\n\t\t结构化命名\n\tcss命名\n\t\t建议使用小写字母\n\t\t以英文字母开头,后面可以连接数字,字母,下划线,连字符,建议尽量使用英文字母,适当使用下划线和连接线\n\t\t词必达意,名称要反映用途和相关信息,同时也要简短\nCSS reset\n\t在html中有默认的样式,\n\t例如:\n\tp标签有上下边距\n\tstrong标签有字体加粗样式\n\tem标签有字体倾斜样式\n\t不同浏览器默认样式之间也会有差别\n\t例如缩进的样式\n\t在ie下是通过margin来实现的,\n\t在firefox下时通过padding实现的\n\t在切换页面的时候浏览器的默认样式通常会给我们带来麻烦,影响开发效率.\n\t解决方法:\n\t\t一开始就去掉浏览器额默认样式,准确的说是通过重新定义标签样式,覆盖浏览器的css默认属性,最简单的说法就是把浏览器提供的默认样式覆盖掉,这就是css reset\n\t为什么用css reset:\n\t\t因为浏览器的品种很多，每个浏览器的默认样式也是不同的，比如<button>标签，在IE浏览器、Firefox浏览器以及Safari浏览器中的样式都是不同的，所以，通过重置button标签的CSS属性，然后再将它统一定义，就可以产生相同的显示效果。\n')])])]),e("p",[t._v("​")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("BFC \n\t块级格式化上下文,是利用布局块级盒子的一块渲染区域\n\t触发机制:\n\t\t根元素 html元素\n\t\tfloat的值不为none\n\t\toverflow的值不为visible\n\t\tdiasplay的值为inline-block,table-cell,tabel-caption\n\t\tposition的值为absolute或fixed\n\t作用:\n\t\tbfc是页面上的一个隔离的独立容器,容器里面的子元素不会影响外面元素,反之亦然\n\t\t清除浮动带来的影响\n\t\t解决maigin塌陷的问题\n\tbfc与普通块级元素的差异\n\t\t可以阻止元素被浮动元素覆盖\n\t\t可以包含浮动元素\n")])])]),e("p",[t._v("​\t\n​\t\n​\t\n​\t\n​\t\n​\t\n​\t\n​\t\n​\t\n​\t\n​\t\n​\t\n​\t\n​\t\ncss三种使用方式：\n​\t内联样式：把css样式写在标签的style属性当中\n​\t内部样式：通过style标签写在head标签中\n​\t外部样式：通过link标签，将css写在外部css文件中\n​\t\t引入外部样式表的多种方式\n​\t\t\thtml中的方法："),e("link",{attrs:{rel:"stylesheet",href:"./css/style.css"}}),t._v("\n​\t\t\t\trel的作用就是用来告诉浏览器我即将引用的外部文件的类型\n​\t\t\tcss中的方法：@import url(./css/style.css);\n​\t\n三种使用方式的区别：\n​\t优先级不同:\n​\t\t内联样式>内部样式=外部样式\n​\t\tlink引入的外部样式表和style标签的内部样式表，优先级相同。谁在后面听谁的。后来者居上\n​\t\t\t请使用一种方式证明三种方式的优先级：\n​\t\t\t\t用三种方式同时对一个标签的属性进行设置，看最后显示的效果\n​\t作用域：\n​\t\t内联样式的作用域最小，只有当前标签\n​\t\t内部样式表作用域是当前的html文件\n​\t\t外部样式表作用域适用于所有的文件\n​\t\tcss统筹\n​\t\t\t文档统筹\n​\t\t\t\t将一个网站几十个网页相同的css提取到一个css样式表里\n​\t\t\t\t\t例如一个网站的头和尾\n​\t\t\n​")]),t._v(" "),e("p",[t._v('背景属性：\n背景颜色：\n属性：background-color\n取值：\n合法的颜色值\ntransparent:透明颜色\n注意：\n背景颜色会填充到所有区域\n背景图片\nbackground-image：\n取值：\nurl（""）\nbackground-image\nimg\n背景重复（重铺）\n当元素区域大于背景图，则默认是以平铺的方式出现\n属性：\nbackground-repeat\n取值：\nrepeat\n默认值（背景重复的）\nrepeat-x\n在水平方向上平铺\nrepeat-y\n在垂直方向上平铺\nno-repeat\n不平铺\n背景图片尺寸\n属性：\nbackground-size\n取值：\nwidth height\nwidth% height%\ncover\n将图片等比放大直到覆盖整个区域为止\ncontain\n包含\n背景图片的固定：\n作用：\n让背景一直保持在可视化区域中，不随着滚动条的改变而改变\n属性：\nbackground-attachment\n取值：\nscroll\n滚动（默认值）\nfixed\n固定\nbackground-position\n取值：\nx y\nx为正，则背景图片向右移\nx为负，则背景图片向左移\ny为正，则背景图片向下移\ny为负，则背景图片向上移\nx% y%\n0% 0%       当前容器左上角\n100% 100%   当前容器右下角\n50% 50%     当前容器正中央\n关键字\nx:left right center\ny:top bottom center\n雪碧图/精灵图\nCSS sprites\n将若干小图片放进一张大图中\n以减少HTTP请求次数')]),t._v(" "),e("p",[t._v('背景图片的简写\nbackground:color url("") repeat attachment position;\nurl("")和position必须同时使用，其他随意组合')]),t._v(" "),e("p",[t._v("渐变：\n什么是？\n两种或者多种颜色平缓过渡的效果\n重要元素\n色标：指定每一个颜色出现的位置以及值\n分类：\n线性渐变\n是以直线的方式来填充颜色\n径向渐变\n是以圆形的方式来填充颜色\n语法：\n线性渐变\n属性：\nbackground-image\n取值：\n线性渐变取值：\nlinear-gradient（angle,color-point1,color-point2,color-point3）\nangle:\n关键值：\nto top\nto tight\nto left\nto bottom\n具体的角度值\n0-360deg\n径向渐变取值：\n属性：\nbackground-image\n取值：\n径向渐变取值：\nradial-gradient（color-point1,color-point2,color-point3）\nangle:\n关键值：\nto top\nto tight\nto left\nto bottom\n具体的角度值\n0-360deg")]),t._v(" "),e("p",[t._v("定位：改变元素在网页中的默认位置\n分类：普通流定位：页面中默认的固定方式\nmargin padding来微调\n浮动定位：使多个块级元素在一行内显示\n相对定位\n绝对定位\n固定定位\n粘性定位")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v('\t普通流定位：又称“文档流定位”\n\t\t特点：所有块级元素都是从父元素左上角开始排列\n\t\t\t每个元素都有自己的控件，默认是不允许被重叠的\n\t\t\t所有的块级元素从上向下排列\n\t\t\t行内块元素&&行内元素都是从左向右排列，放不下换行\n\t浮动定位：\n\t\t浮动：如果将一个元素进行浮动，具有以下特性：\n\t\t\t浮动  将元素排除在文档流之外（脱离文档流），不占据页面的空间，\n\t\t\t其他元素上前占位\n\t\t\t浮动元素会停靠在父元素左边或右边，或者其他已浮动元素的边缘上\n\t\t语法：属性：float\n\t\t\t取值：\n\t\t\t\tnone:默认值，及元素无任何浮动效果\n\t\t\t\tleft:左浮动，让元素停靠在父元素左边，或紧挨已有浮动元素右边\n\t\t\t\tright:右浮动，让元素停靠在父元素右边，或紧挨已有浮动元素左边边\n\t\t浮动的特性：\n\t\t\t浮动的元素脱离标砖文档流\n\t\t\t\t元素一旦脱离了文档流就不存在等级之分\n\t\t\t浮动的元素产生的字围效果\n\t\t\t浮动的元素当一行的宽度不够使用的时候会自动往前面的空隙挤\n\t\t\t子元素浮动之后最好把同级的其他子元素都浮动\n\t\t浮动带来的恶劣影响影响：\n\t\t\t如果父元素没有设置高度，儿子元素全部都浮动了，那么父元素高度将变为0\n\t\t\t前面的元素浮动之后会影响网页后面元素的布局\n\t\t如何清除浮动带来的影响：\n\t\t\t隔墙法：clear both\n\t\t\t\tnone:默认值，不做任何清除效果,允许两边出现浮动\n\t\t\t\tleft:清除前面元素左浮动带来的影响\n\t\t\t\tright:清除前面与元素右浮动带来的影响\n\t\t\t\tboth:清除前面元素任何一种浮动带来的影响\n\t\t\t清除浮动  最成熟的方法。可以直接写在预格式样式中\n\t\t\t\t.clearfix {\n\t\t\t\t\t*zoom: 1;\n\t\t\t\t}\n\t\t\t\t.clearfix:before, .clearfix:after {\n\t\t\t\t\tcontent: " ";\n\t\t\t\t\tdisplay: table;\n\t\t\t\t}\n\t\t\t\t.clearfix:after {\n\t\t\t\t\tclear: both;\n\t\t\t\t}\n\t\t\t给父元素设置一个具体的高度\n\t\t\toverflow: hidden;\n\t\t\t\t有效果是因为触发了BFC\n\t\t\t\t\n\t相对定位：元素相对与它原来的位置发生偏移\n\t\t属性：position\n\t\t取值：relative\n\t\t注意：相对定位元素原来位置会被保留，不能被其他元素占位\n\t\t\t相对定位的元素如果一定，只不过是视觉上的位置移动，本身并没有进行移动\n\t\t\t相对定位并没有多里标准文档流\n\t\t\t好处：\n\t\t\t    通过相对定位可以让元素视觉上灵活的移动到指定的位置上去，并不会影响元素本身的布局\n\t\t\t缺点：\n\t\t\t    相对定位的元素位移参考是相对于元素本身的位置，一旦原来本身的位置发生了改变，那么相对定位的元素的视觉位置也会影响。\n\t\t\t元素形影分离，看到元素位移了，但原来的位置还占着。只是看起来位移了。\n\t\t\t移动的影子可以重叠\n\t\t\t看到的元素移动只是移动影子，实际本体还在原来的地方。\n\t\t\tmargin与position区别：\n\t\t\t是否影响其他元素的位置\n\t绝对定位：脱离文档流，即不占据页面空间\n\t\t只会相对于离他最近的已定位的祖先元素发生位置的改变\n\t\t绝对定位:position:absolute\n\t\t    一旦设置绝对定位,元素就脱离的标准文档流,不再手袋文档流中标签的等极限制\n\t\t    同时元素也会脱离的标准文本流,不会再形成类似于浮动的字围效果了.\n\t\t    绝对定位的位移问题\n\t\t        定位参考\n\t\t            绝对定位的元素位移,是以具有定位属性的祖先元素为参考.只要是长辈都行.\n\t\t            如果所有的祖先元素都没有定位,那么就会以body为参考\n\t\t        定位默认值\n\t\t            无论是相对定位,还是绝对定位,位移参数在没有设置的情况写,默认值不是0,而是auto\n\t\t        以body为参考时的特殊情况\n\t\t            top:\n\t\t                当一个绝对定位的元素以body为参考时,设置top为首屏,参考点为首屏左上角.\n\t\t            bottom:\n\t\t                当一个绝对定位的元素以body为参考时,设置bottom,参考点为首屏左下角\n\t\t        子绝父相\n\t\t\t\t\t子元素绝对定位,父元素相对定位.如果多个绝对子元素,最外层父元素一定要相对元素.\n\t\t\t\t\t如果祖先元素中具有定位属性,那么将会以祖先元素为参考\n\t\t\t\t\t如果一个祖先元素的低端功能为属性值为static,那么将不能够作为子元素定位的参考\t\t\t\t\t\t   \n\t\t\t相对定位和绝对定位区别:\n\t\t\t\t参照物不同:\t\n\t\t\t\t\t绝对定位参照物是包含块(父级)\n\t\t\t\t\t相对定位参照物是本身\n\t\t\t\t所占空间:\n\t\t\t\t\t绝对定位是将对象从文档流中脱离出来,因此不占据空间\n\t\t\t\t\t相对定位不破坏正常的文档流顺序,无论是否进移动,元素仍然占据原来的空间\n\t\t\t\t\n\t固定定位:position:fixed\n\t    固定定位参考,以网页浏览器为参考\n\t\t\n\t粘性定位:position:sticky\n\t\t定位基于用户滚动的位置\n\t\t\t在页面中时,跟随用户滚动,开始超出可视框后,会固定在目标位置\n\t\n\t层级关系\n\t\tz-index:数字. 默认auto\n\t\t数字大的层叠在上面,相对定位就可以在不影响,可以设置页面的情况下使用z-index值\n\t\t只能被设置了定位的元素使用\n\t\t层级排序\t\n\t\t\t如果大家都不去设置z-index就会采用后来居上的原则\n\t\t\t如果大家都设置了z-index那么谁大听谁的\n\t\t\t如果父元素的z-index较大,另一个父元素的z-index值较小,那么较小的父元素的子元素永远无法压倒较大的父元素的子元素\n\t\t\t(父亲怂了,儿子再NB也没用)\n\t\tz-index:两个已经定位的元素发生重叠时，通过该属性确定重叠层次\n\t\n\t显示：属性：display\n\t  　　取值：none 让生成的元素脱离文档流，从页面消失\n\t\t\t   block 让生成的元素跟块级元素一样\n\t\t\t   inline-block 让生成的元素跟行内块级元素一样\n\t显示效果：\n\t 可见性：\n\t\t\t属性：visibility\n\t\t\t取值：visible  默认值，元素可见\n\t\t\t\t  hidden  隐藏，但未脱离文档流\n\n定位元素的层级关系:\n\tz-index:\n\t\tauto:默认\n\t\tnumber:无单位的整数值,可为负数,数值越大,层的顺序越靠上\n\t\tTip:此属性仅仅作用域position属性值relative或absolute,fixed的对象\n\t\t\t子元素的层级关系会受到父元素的影响\n\t包含块:\n\t\t包含块是决定定位的基础,包含块就是为绝对定位元素提供坐标,偏移和显示范围的参照物,即确定绝对定位的偏移期待和百分比长度的参考;\n\t\t默认状态下,body是一个大的包含块,所有绝对定位的偏移起点和百分比大小的显示的,如果我们定义了包含元素为包含元素块以后,对于被包含的绝对定位元素来说,就会根据最接近的具有定位功能的上级元素来定位自己显示位置\n\t\t定义元素为包含块:\n\t\t\t给绝对定位元素的父元素添加声明position:relative/absolute\n')])])]),e("p",[t._v("置换元素/非置换元素\n置换元素:\n一个内容不受CSS视觉格式化模型控制,CSS渲染模型并不考虑对此内容的渲染,且元素本身一般拥有固定尺寸的元素,\n这些元素网往往没有实际的内容,即是一个空元素.置换元素就是浏览器根据元素的属性和属性值,来决定元素的具体显示内容,被称之为置换元素\n非置换元素:\n非置换元素/不可置换元素/HTML中除了可替换元素外,其他都是不可替换元素\n即其内容直接表现给用户端例如浏览器")]),t._v(" "),e("p",[t._v("浏览器前缀\n-ms- ：IE\n-moz-：firefox\n-o- ：opera\n-webkit- ：chrome|safari")]),t._v(" "),e("p",[t._v("css bug\nCSS样式在各浏览器中解析不一致的情况，或者说CSS样式在浏览器中不能正确显示的问题称为CSS bug.")]),t._v(" "),e("p",[t._v("css hack\nCSS中，Hack是指一种兼容CSS在不同浏览器中正确显示的技巧方法，因为它们都属于个人对CSS代码的非官方的修改，或非官方的补丁。有些人更喜欢使用patch(补丁)来描述这种行为。\n之前说过的filter，其实也属于hack的一种\n副作用\n降低代码可读性\n增加代码负担\n常见的css hack及css bug\nIE6常见CSS解析Bug及hack\n图片间隙\n在元素中直接插入图片时，图片下方会产生约3像素的间隙(该bug出现在IE6及更低版本中)\nhack1: 将"),e("img"),t._v("转为块状元素，给"),e("img"),t._v("添加声明：display:block;\nhack2:hack2:将img设置vertical-align:top/middle/bottom;只要不为baseline\n双倍浮向（双倍边距）\n当Ie6及更低版本浏览器在解析浮动元素时，会错误地把浮向边边界加倍显示。\nhack:给浮动元素添加声明：display:inline;\n默认高度\n在IE6及以下版本中，部分块元素拥有默认高度（低于16px高度）\nhack1:给元素添加声明：font-size:0;\nhack2：给元素添加声明：overflow:hidden;\n百分比bug\n在IE6及以下版本中在解析百分比时，会按四舍五入方式计算从而导致50%加50%大于100%的情况。\nhack:给右面的浮动元素添加声明：clear:right;     意思：清除右浮动。\n列表阶梯BUG（IE6及更低版本的浏览器中）\n在给的子元素中使用了Float:left;父元素中没有设置浮动属性，li阶梯状效果。\nhack:给父元素设置浮动便能解决此问题\n当给LI里的A转成块元素，并设置了固定高度时，且给父元素写了浮动后在IE6及更低的版本浏览器里会出现垂直显示。\nhack:给a也设置左浮动便可解决。")])])}),[],!1,null,null,null);n.default=i.exports}}]);